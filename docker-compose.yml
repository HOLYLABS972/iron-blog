services:
  mongodb:
    image: mongo:7.0
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=ironblog
    volumes:
      - mongodb_data:/data/db
    restart: unless-stopped
    networks:
      - my_custom_network

  fileserver:
    build:
      context: ./fileserver
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    volumes:
      - ./uploads:/app/uploads
    environment:
      - PORT=3001
    restart: unless-stopped
    networks:
      - my_custom_network

  nextjs-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - .env.local
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/ironblog?authSource=admin
    depends_on:
      - mongodb
      - fileserver
    restart: unless-stopped
    networks:
      - my_custom_network

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    depends_on:
      - nextjs-app
      - fileserver
    restart: unless-stopped
    networks:
      - my_custom_network

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - /etc/letsencrypt:/etc/letsencrypt
    entrypoint: /bin/sh -c
    command: >
      "trap exit TERM; while :; do sleep 1; done"
    networks:
      - my_custom_network

volumes:
  mongodb_data:

networks:
  my_custom_network: