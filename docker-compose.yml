services:
  mongodb:
    image: mongo:7.0
    container_name: mongodb
    ports:
      - "0.0.0.0:27017:27017"  # Expose to all interfaces for internet access
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=StrongPassword123!
      - MONGO_INITDB_DATABASE=ironblog
      - MONGO_INITDB_DATABASE_USER=ironblog_user
      - MONGO_INITDB_DATABASE_PASSWORD=IronBlogPass456!
    command: --bind_ip_all --auth
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    restart: unless-stopped
    networks:
      - my_custom_network

  fileserver:
    container_name: fileserver
    build:
      context: ./fileserver
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    volumes:
      - fileserver_uploads:/app/uploads
    environment:
      - PORT=3001
    restart: unless-stopped
    networks:
      my_custom_network:
        aliases:
          - fileserver
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nextjs-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - .env.production
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:StrongPassword123!@mongodb:27017/ironblog?authSource=admin
      - FILESERVER_URL=http://fileserver:3001
      - FILESERVER_FALLBACK=http://localhost:3001
    depends_on:
      - mongodb
      - fileserver
    restart: unless-stopped
    networks:
      - my_custom_network

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    depends_on:
      - nextjs-app
      - fileserver
    restart: unless-stopped
    networks:
      - my_custom_network

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - /etc/letsencrypt:/etc/letsencrypt
    entrypoint: /bin/sh -c
    command: >
      "trap exit TERM; while :; do sleep 1; done"
    networks:
      - my_custom_network

  ipsec-vpn:
    image: hwdsl2/ipsec-vpn-server:latest
    container_name: ipsec-vpn
    # Use host networking so UDP 500/4500 are reachable directly
    network_mode: "host"
    privileged: true
    cap_add:
      - NET_ADMIN
    environment:
      - VPN_IPSEC_PSK=ipsec-vpn-key
      - VPN_USER=dima
      - VPN_PASSWORD=rabbit
    volumes:
      - /lib/modules:/lib/modules:ro
    restart: unless-stopped

volumes:
  mongodb_data:
  fileserver_uploads:

networks:
  my_custom_network: