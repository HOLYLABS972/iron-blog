user nginx;
worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;



    # HTTPS server block for API
    server {
        listen 443 ssl;
        server_name api.theholylabs.com;

        # SSL certificates
        ssl_certificate /etc/letsencrypt/live/api.theholylabs.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api.theholylabs.com/privkey.pem;

        # SSL settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        # Return API status JSON
        location = / {
            add_header Content-Type application/json;
            return 200 '{"status":"up","service":"proxy-api","message":"API is running","timestamp":"$time_iso8601"}';
        }

        # Redirect /ok to backend container
        location = /ok {
            proxy_pass http://backend:5000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy all requests to the backend
        location / {
            proxy_pass http://backend:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Optional: Increase buffer sizes for large requests (e.g., file uploads)
        client_max_body_size 10M;
    }

    # (Removed) HTTPS server block for Email Management Frontend

    # HTTPS server block for Webmail
    server {
        listen 443 ssl;
        server_name mail.theholylabs.com;

        # SSL certificates
        ssl_certificate /etc/letsencrypt/live/mail.theholylabs.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/mail.theholylabs.com/privkey.pem;

        # SSL settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        # Proxy to webmail container
        location / {
            proxy_pass http://webmail:8888;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        client_max_body_size 25M;
    }

    # HTTP server block for API
    server {
        listen 80;
        server_name api.theholylabs.com;

        # Return API status JSON
        location = / {
            add_header Content-Type application/json;
            return 200 '{"status":"up","service":"proxy-api","message":"API is running","timestamp":"$time_iso8601"}';
        }

        # Redirect /ok to backend container
        location = /ok {
            proxy_pass http://backend:5000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location / {
            proxy_pass http://backend:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        client_max_body_size 10M;
    }

    # (Removed) HTTP server block for Email Management Frontend

    # HTTP server block for Webmail (temporary - for testing)
    server {
        listen 80;
        server_name mail.theholylabs.com;

        location / {
            proxy_pass http://webmail:8888;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        client_max_body_size 25M;
    }

    # HTTPS server block for payments
    server {
        listen 443 ssl;
        server_name pay.theholylabs.com;

        # SSL certificates
        ssl_certificate /etc/letsencrypt/live/pay.theholylabs.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/pay.theholylabs.com/privkey.pem;

        # SSL settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        # Proxy all requests to the payments backend
        location / {
            proxy_pass http://payments:5001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        client_max_body_size 10M;
    }

    # HTTP server block for payments
    server {
        listen 80;
        server_name pay.theholylabs.com;

        location / {
            proxy_pass http://payments:5001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        client_max_body_size 10M;
    }

    # HTTPS server block for fileserver (bucket)
    server {
        listen 443 ssl;
        server_name bucket.theholylabs.com;

        # SSL certificates
        ssl_certificate /etc/letsencrypt/live/bucket.theholylabs.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/bucket.theholylabs.com/privkey.pem;

        # SSL settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        # Proxy all requests to the fileserver
        location / {
            proxy_pass http://fileserver:3001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        client_max_body_size 100M;
    }

    

    # HTTP server block for fileserver (bucket)
    server {
        listen 80;
        server_name bucket.theholylabs.com;

        # Certbot challenge - must come before location /
        location ~ /.well-known/acme-challenge/ {
            allow all;
            root /var/www/certbot;
        }

        location / {
            proxy_pass http://fileserver:3001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        client_max_body_size 100M;
    }





    # HTTP for n8n (Certbot and redirect)
    server {
        listen 80;
        server_name dev.theholylabs.com;

        # Certbot challenge - must come before location /
        location ~ /.well-known/acme-challenge/ {
            allow all;
            root /var/www/certbot;
        }

        location / {
            proxy_pass http://n8n:5678;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for n8n
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_cache_bypass $http_upgrade;
        }
    }

    # HTTPS for n8n
    server {
        listen 443 ssl;
        server_name dev.theholylabs.com;

        ssl_certificate /etc/letsencrypt/live/dev.theholylabs.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/dev.theholylabs.com/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        location / {
            proxy_pass http://n8n:5678;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for n8n
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_cache_bypass $http_upgrade;
        }

        client_max_body_size 10M;
    }
    # HTTP server block for VPN (IPsec)
    server {
        listen 80;
        server_name vpn.theholylabs.com;

        # Certbot challenge - must come before other locations
        location ~ /.well-known/acme-challenge/ {
            allow all;
            root /var/www/certbot;
        }

        # Root returns VPN status JSON (no upstream proxy)
        location = / {
            default_type application/json;
            return 200 '{"status":"active","server_address":"vpn.theholylabs.com","protocol":"ipsec"}';
        }

        # Hide direct /vpn/status path
        location = /vpn/status {
            return 404;
        }

        # Restrict dashboard
        location ^~ /proxy {
            return 404;
        }
        # Block all other paths
        location / {
            return 404;
        }
    }

    # HTTPS server block for VPN (IPsec)
    server {
        listen 443 ssl;
        server_name vpn.theholylabs.com;

        ssl_certificate /etc/letsencrypt/live/vpn.theholylabs.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/vpn.theholylabs.com/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        # Root returns VPN status JSON (no upstream proxy)
        location = / {
            default_type application/json;
            return 200 '{"status":"active","server_address":"vpn.theholylabs.com","protocol":"ipsec"}';
        }

        # Hide direct /vpn/status path
        location = /vpn/status {
            return 404;
        }

        # Restrict dashboard
        location ^~ /proxy {
            return 404;
        }
        # Block all other paths
        location / {
            return 404;
        }
    }

    # HTTPS server block for SMTP Service
    server {
        listen 443 ssl;
        server_name smtp.theholylabs.com;

        ssl_certificate /etc/letsencrypt/live/smtp.theholylabs.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/smtp.theholylabs.com/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # CORS headers
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;

        # Handle preflight requests
        location / {
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                add_header Access-Control-Allow-Headers "Content-Type, Authorization";
                add_header Access-Control-Max-Age 86400;
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
            
            proxy_pass http://smtp-service:5001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        client_max_body_size 10M;
    }


    # HTTP server block for SMTP Service
    server {
        listen 80;
        server_name smtp.theholylabs.com;

        # Certbot challenge - must come before other locations
        location ~ /.well-known/acme-challenge/ {
            allow all;
            root /var/www/certbot;
        }

        # Redirect HTTP to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTP server block for Blog Backend
    server {
        listen 80;
        server_name blog.theholylabs.com;

        # Certbot challenge - must come before other locations
        location ~ /.well-known/acme-challenge/ {
            allow all;
            root /var/www/certbot;
        }

        # Redirect HTTP to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTPS server block for Blog Backend
    server {
        listen 443 ssl;
        server_name blog.theholylabs.com;

        # SSL certificates
        ssl_certificate /etc/letsencrypt/live/blog.theholylabs.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/blog.theholylabs.com/privkey.pem;

        # SSL settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        # Proxy all requests to the blog backend
        location / {
            proxy_pass http://blog-backend:5001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers for blog backend
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, Accept, Origin" always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, Accept, Origin";
                add_header Access-Control-Max-Age 86400;
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
        }

        client_max_body_size 10M;
    }


}
